"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongodb_1 = require("mongodb");
var CONFIG;
var CLIENT;
var COLLECTIONS = [];
async function startClient(cfg) {
    CONFIG = Object.assign({}, cfg);
    await getClient();
    for (let db of CONFIG.dbs)
        for (let c of db.collections)
            await loadCollection({ db: db.name, collection: c });
}
exports.startClient = startClient;
async function getClient() {
    return (CLIENT = await mongodb_1.MongoClient.connect(CONFIG.url, {
        useNewUrlParser: CONFIG.useNewUrlParser,
        useUnifiedTopology: CONFIG.useUnifiedTopology
    }).catch(err => {
        console.log(err);
        throw err;
    }));
}
async function loadCollection(config) {
    const dbName = config.db;
    const collectionName = config.collection;
    const client = CLIENT;
    var db;
    var collection;
    try {
        db = await client.db(config.db);
        collection = await db.collection(config.collection);
    }
    catch (e) {
        console.log(e);
        client.close();
        throw e;
    }
    COLLECTIONS.push({ client, db, collection, dbName, collectionName });
}
function getColletion(config) {
    let cfg = COLLECTIONS.find(c => c.dbName === config.db && c.collectionName === config.collection);
    if (!cfg)
        throw "Collection " +
            config.collection +
            " and db " +
            config.db +
            " not found.";
    return cfg;
}
exports.getColletion = getColletion;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZ28uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9tb25nby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFDQUFzRDtBQWlCdEQsSUFBSSxNQUFpQixDQUFDO0FBRXRCLElBQUksTUFBbUIsQ0FBQztBQUV4QixJQUFJLFdBQVcsR0FBcUIsRUFBRSxDQUFDO0FBRWhDLEtBQUssVUFBVSxXQUFXLENBQUMsR0FBYztJQUM5QyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDaEMsTUFBTSxTQUFTLEVBQUUsQ0FBQztJQUNsQixLQUFLLElBQUksRUFBRSxJQUFJLE1BQU0sQ0FBQyxHQUFHO1FBQ3ZCLEtBQUssSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLFdBQVc7WUFDMUIsTUFBTSxjQUFjLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUMzRCxDQUFDO0FBTkQsa0NBTUM7QUFFRCxLQUFLLFVBQVUsU0FBUztJQUN0QixPQUFPLENBQUMsTUFBTSxHQUFHLE1BQU0scUJBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRTtRQUNyRCxlQUFlLEVBQUUsTUFBTSxDQUFDLGVBQWU7UUFDdkMsa0JBQWtCLEVBQUUsTUFBTSxDQUFDLGtCQUFrQjtLQUM5QyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ2IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNqQixNQUFNLEdBQUcsQ0FBQztJQUNaLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDTixDQUFDO0FBRUQsS0FBSyxVQUFVLGNBQWMsQ0FBQyxNQUc3QjtJQUNDLE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxFQUFFLENBQUM7SUFDekIsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztJQUN6QyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdEIsSUFBSSxFQUFNLENBQUM7SUFDWCxJQUFJLFVBQXNCLENBQUM7SUFDM0IsSUFBSTtRQUNGLEVBQUUsR0FBRyxNQUFNLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2hDLFVBQVUsR0FBRyxNQUFNLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQ3JEO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFDVixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2YsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ2YsTUFBTSxDQUFDLENBQUM7S0FDVDtJQUVELFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLENBQUMsQ0FBQztBQUN2RSxDQUFDO0FBRUQsU0FBZ0IsWUFBWSxDQUFDLE1BRzVCO0lBQ0MsSUFBSSxHQUFHLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FDeEIsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxLQUFLLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLGNBQWMsS0FBSyxNQUFNLENBQUMsVUFBVSxDQUN0RSxDQUFDO0lBQ0YsSUFBSSxDQUFDLEdBQUc7UUFDTixNQUFNLGFBQWE7WUFDakIsTUFBTSxDQUFDLFVBQVU7WUFDakIsVUFBVTtZQUNWLE1BQU0sQ0FBQyxFQUFFO1lBQ1QsYUFBYSxDQUFDO0lBRWxCLE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQWZELG9DQWVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9uZ29DbGllbnQsIERiLCBDb2xsZWN0aW9uIH0gZnJvbSBcIm1vbmdvZGJcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJQ2ZnTW9uZ28ge1xuICB1cmw6IHN0cmluZztcbiAgdXNlTmV3VXJsUGFyc2VyOiBib29sZWFuO1xuICB1c2VVbmlmaWVkVG9wb2xvZ3k6IGJvb2xlYW47XG4gIGRiczogeyBuYW1lOiBzdHJpbmc7IGNvbGxlY3Rpb25zOiBzdHJpbmdbXSB9W107XG59XG5cbmludGVyZmFjZSBJQ2ZnQ29sbGVjdGlvbiB7XG4gIGNsaWVudDogTW9uZ29DbGllbnQ7XG4gIGRiOiBEYjtcbiAgY29sbGVjdGlvbjogQ29sbGVjdGlvbjxhbnk+O1xuICBkYk5hbWU6IHN0cmluZztcbiAgY29sbGVjdGlvbk5hbWU6IHN0cmluZztcbn1cblxudmFyIENPTkZJRzogSUNmZ01vbmdvO1xuXG52YXIgQ0xJRU5UOiBNb25nb0NsaWVudDtcblxudmFyIENPTExFQ1RJT05TOiBJQ2ZnQ29sbGVjdGlvbltdID0gW107XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdGFydENsaWVudChjZmc6IElDZmdNb25nbykge1xuICBDT05GSUcgPSBPYmplY3QuYXNzaWduKHt9LCBjZmcpO1xuICBhd2FpdCBnZXRDbGllbnQoKTtcbiAgZm9yIChsZXQgZGIgb2YgQ09ORklHLmRicylcbiAgICBmb3IgKGxldCBjIG9mIGRiLmNvbGxlY3Rpb25zKVxuICAgICAgYXdhaXQgbG9hZENvbGxlY3Rpb24oeyBkYjogZGIubmFtZSwgY29sbGVjdGlvbjogYyB9KTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0Q2xpZW50KCk6IFByb21pc2U8TW9uZ29DbGllbnQ+IHtcbiAgcmV0dXJuIChDTElFTlQgPSBhd2FpdCBNb25nb0NsaWVudC5jb25uZWN0KENPTkZJRy51cmwsIHtcbiAgICB1c2VOZXdVcmxQYXJzZXI6IENPTkZJRy51c2VOZXdVcmxQYXJzZXIsXG4gICAgdXNlVW5pZmllZFRvcG9sb2d5OiBDT05GSUcudXNlVW5pZmllZFRvcG9sb2d5XG4gIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB0aHJvdyBlcnI7XG4gIH0pKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gbG9hZENvbGxlY3Rpb24oY29uZmlnOiB7XG4gIGRiOiBzdHJpbmc7XG4gIGNvbGxlY3Rpb246IHN0cmluZztcbn0pOiBQcm9taXNlPHZvaWQ+IHtcbiAgY29uc3QgZGJOYW1lID0gY29uZmlnLmRiO1xuICBjb25zdCBjb2xsZWN0aW9uTmFtZSA9IGNvbmZpZy5jb2xsZWN0aW9uO1xuICBjb25zdCBjbGllbnQgPSBDTElFTlQ7XG4gIHZhciBkYjogRGI7XG4gIHZhciBjb2xsZWN0aW9uOiBDb2xsZWN0aW9uO1xuICB0cnkge1xuICAgIGRiID0gYXdhaXQgY2xpZW50LmRiKGNvbmZpZy5kYik7XG4gICAgY29sbGVjdGlvbiA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oY29uZmlnLmNvbGxlY3Rpb24pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coZSk7XG4gICAgY2xpZW50LmNsb3NlKCk7XG4gICAgdGhyb3cgZTtcbiAgfVxuXG4gIENPTExFQ1RJT05TLnB1c2goeyBjbGllbnQsIGRiLCBjb2xsZWN0aW9uLCBkYk5hbWUsIGNvbGxlY3Rpb25OYW1lIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29sbGV0aW9uKGNvbmZpZzoge1xuICBkYjogc3RyaW5nO1xuICBjb2xsZWN0aW9uOiBzdHJpbmc7XG59KTogSUNmZ0NvbGxlY3Rpb24ge1xuICBsZXQgY2ZnID0gQ09MTEVDVElPTlMuZmluZChcbiAgICBjID0+IGMuZGJOYW1lID09PSBjb25maWcuZGIgJiYgYy5jb2xsZWN0aW9uTmFtZSA9PT0gY29uZmlnLmNvbGxlY3Rpb25cbiAgKTtcbiAgaWYgKCFjZmcpXG4gICAgdGhyb3cgXCJDb2xsZWN0aW9uIFwiICtcbiAgICAgIGNvbmZpZy5jb2xsZWN0aW9uICtcbiAgICAgIFwiIGFuZCBkYiBcIiArXG4gICAgICBjb25maWcuZGIgK1xuICAgICAgXCIgbm90IGZvdW5kLlwiO1xuXG4gIHJldHVybiBjZmc7XG59XG4iXX0=